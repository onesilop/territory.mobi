@page
@model territory.mobi.Pages.MapModel

@{
    Layout = "./Shared/_Publayout";
    ViewData["Title"] = "territory.mobi";
    ViewData["LeftTitle"] = Model.Map.MapDesc;
    ViewData["RightTitle"] = Model.Map.MapArea;
}

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
<meta name="apple-mobile-web-app-capable" content="yes" />

<div id="imgDiv" class="m-0 p-0 align-middle">

    @if (Model.Image.ImgImage == null)
    {
        <img id="mappic" class="img-fluid align-self-center align-middle d-block mx-auto w-auto h-auto" src="@Model.Image.ImgPath" alt="@Model.Image.ImgText" />
    }
    else
    {
        <img id="mappic" class="img-fluid align-self-center align-middle d-block mx-auto w-auto h-auto" src="data:image;base64,@System.Convert.ToBase64String(Model.Image.ImgImage)" alt="@Model.Image.ImgText" />
    }
</div>

    <div id="map" class="d-none" style="height: 102%; width: 102%;"></div>
    <div id="ftr" class="d-inline-flex fixed-bottom bg-primary justify-content-center">
    <a class="footer-link align-self-center m-1" asp-page="./Directory" asp-route-CongName="@Model.Cong.CongName">
        <img class="MapMenuIcon" src="~/images/assets/TOC1.png" />
    </a>
    <a id="imgMap" class="footer-link align-self-center m-1 d-none" href="#">
        <img class="MapMenuIcon" src="~/images/assets/mapnav.png" />
    </a>
    @if (Model.ShowMap)
    {
        <a id="googMap" class="footer-link align-self-center m-1" href="#">
            <img class="MapMenuIcon" src="~/images/assets/Navigation.png" />
        </a>
    }
    @if (Model.Map.Parking != "" && Model.Map.Parking != null)
    {
        <a id="parking" class="footer-link align-self-center m-1" href="#">
            <img class="MapMenuIcon" src="~/images/assets/Parking.png" />
        </a>

    }
    @if (Model.Map.Notes != "" && Model.Map.Notes != null)
    {
        <a id="notes" class="footer-link align-self-center m-1" href="#">
            <img class="MapMenuIcon" src="~/images/assets/Notes.png" />
        </a>
    }
    @if (Model.DNC.Count() > 0)
    {
        <a class="footer-link align-self-center m-1" id="dnc" href="#">
            <img class="MapMenuIcon" src="~/images/assets/DNC.png" />
        </a>
    }
</div>
<form id="pwrdInput" method="post" class="invisible">
    <div>Enter In your Password</div>
</form>


@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script type="text/javascript">
        function scaleMapstuff() {
            var tHgt = $(window).height();
            var fhHgt = tHgt * .08
            var bHgt = tHgt - (fhHgt * 2);
            $('.MapMenuIcon').css("height", fhHgt * .9);
            $('#ftr').css('height', fhHgt);
            $('#imgDiv').css('max-height', bHgt);
            $('#mappic').css('max-height', bHgt);
            $('#bdy').css('height', bHgt);
            $('#mappic').css('padding-top', Math.max(0, (bHgt - parseInt($('#mappic').css('height')))) / 2);
        }

        $(window).on('resize',function () {
            scaleMapstuff()
        });

        $(window).on('load',function () {
            scaleMapstuff()
        });

        $(document).ready(function () {

            scaleMapstuff();

            if ('@Model.ShowMap' == 'True')
            {
                $("#googMap").click(function () {
                    $("#imgMap").removeClass("d-none");
                    $("#map").removeClass("d-none");
                    $("#googMap").addClass("d-none");
                    $("#imgDiv").addClass("d-none");
                    initMap(@Model.MapCentreLng, @Model.MapCentreLat);
                });
            }

            $("#imgMap").click(function () {
                $("#googMap").removeClass("d-none");
                $("#imgDiv").removeClass("d-none");
                $("#imgMap").addClass("d-none");
                $("#map").addClass("d-none");
            });

            $("#parking").click(function () {
                bootbox.dialog({
                title: "<h3>Parking</h3>",
                    message: "@Html.Raw(Model.Map.Parking)",
                    onEscape: true,
                    backdrop: true,
                    centerVertical: true,
                    scrollable: true
                            });
                });

            $("#notes").click(function () {
                bootbox.dialog({
                title: "<h3>Notes</h3>",
                    message: "@Html.Raw(Model.Map.Notes)",
                    onEscape: true,
                    backdrop: true,
                    centerVertical: true,
                    scrollable: true
                            });
                });

            $("#dnc").click(function () {
                var pass = "";
                pass = Cookies.get("@Model.CookieID");
                console.log(pass);
                if (typeof pass === 'undefined') {
                    bootbox.prompt({
                        title: "<h3>Enter password</h3>",
                        inputType: "password",
                        onEscape: true,
                        backdrop: true,
                        centerVertical: true,
                        scrollable: true,
                        callback: function (result) {
                            if (result != null) { checkpassword(sha1(result)) };
                        }
                    });
                } else {
                    checkpassword(pass);
                };

            });
        });

        function checkpassword(pass) {
            $.ajax({
                url: '/Map?handler=PwdCheck',
                data: {
                    pwd: pass,
                    congId: "@Model.Cong.CongId",
                    mapId: "@Model.Map.MapId"}
                })
                .done(function (result) {
                    console.log(result);
                    if (result == "false") {
                        Cookies.remove("@Model.CookieID");
                        bootbox.dialog({
                            title: "<h3>Do Not Calls</h3>",
                            message: "Password incorrect",
                            onEscape: true,
                            backdrop: true,
                            centerVertical: true,
                            scrollable: true
                        });
                    } else {
                        Cookies.set("@Model.CookieID", pass,1);
                        bootbox.dialog({
                            title: "<h3>Do Not Calls</h3>",
                            message: result,
                            onEscape: true,
                            backdrop: true,
                            centerVertical: true,
                            scrollable: true
                            });
                    }
                })
            };

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@Model.GoogleKey&libraries=drawing"></script>
    <script>
//Google map script
    function initMap(lng, lat) {
            google.maps.visualRefresh = true;
            var isMobile = (navigator.userAgent.toLowerCase().indexOf('android') > -1) || (navigator.userAgent.match(/(iPod|iPhone|iPad|BlackBerry|Windows Phone|iemobile)/));

            if (isMobile) {
                var viewport = document.querySelector("meta[name=viewport]");
                viewport.setAttribute('content', 'initial-scale=1.0, user-scalable=no');
            }
            map = new google.maps.Map(document.getElementById('map'), {
                center: new google.maps.LatLng(lat, lng),
                zoom: @Model.MapZoom,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                disableDefaultUI: true
            });

    @if (Model.MapPolygons.Count > 0)
        {
        @foreach (var item in Model.MapPolygons)
            {
            <text>
            var str = '@Html.Raw(item.Position)';

            var poly = jQuery.parseJSON(str);

            var PP = new google.maps.Polygon({
                paths: poly,
                strokeColor: '#32CD32',
                strokeOpacity: 0.8,
                strokeWeight: 1,
                fillColor: '#32CD32',
                fillOpacity: 0.5,
                clickable: true,
                zIndex: @Html.Raw(item.ZIndex)});

            PP.setMap(map);

        </text>
            }
        }

       @if (Model.MapMarkers.Count > 0)
        {
        @foreach (var item in Model.MapMarkers)
            {
            <text>
            var str = '@Html.Raw(item.Position)';

            var pos = jQuery.parseJSON(str);

            var PM = new google.maps.Marker({
                position: pos,
                label: '@Html.Raw(item.Title)',
                clickable: true,
                zIndex: @Html.Raw(item.ZIndex),
                icon: {
                    path: google.maps.SymbolPath.CIRCLE,
                    scale: 0
                }
            });
            PM.setMap(map);

        </text>
            }
        }
    }
    </script>
}
